;; Analyzed by ClojureScript 1.7.48
{:use-macros nil, :excludes #{}, :name rthree.views, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, reagent reagent.core, reagent.core reagent.core}, :uses nil, :defs {Scene {:name rthree.views/Scene, :file "src/cljs/rthree/views.cljs", :line 9, :column 1, :end-line 9, :end-column 11, :meta {:file "/Users/simon/Dropbox (Personal)/workspace/rthree/src/cljs/rthree/views.cljs", :line 9, :column 6, :end-line 9, :end-column 11}}, PerspectiveCamera {:name rthree.views/PerspectiveCamera, :file "src/cljs/rthree/views.cljs", :line 10, :column 1, :end-line 10, :end-column 23, :meta {:file "/Users/simon/Dropbox (Personal)/workspace/rthree/src/cljs/rthree/views.cljs", :line 10, :column 6, :end-line 10, :end-column 23}}, Mesh {:name rthree.views/Mesh, :file "src/cljs/rthree/views.cljs", :line 11, :column 1, :end-line 11, :end-column 10, :meta {:file "/Users/simon/Dropbox (Personal)/workspace/rthree/src/cljs/rthree/views.cljs", :line 11, :column 6, :end-line 11, :end-column 10}}, Object3D {:name rthree.views/Object3D, :file "src/cljs/rthree/views.cljs", :line 12, :column 1, :end-line 12, :end-column 14, :meta {:file "/Users/simon/Dropbox (Personal)/workspace/rthree/src/cljs/rthree/views.cljs", :line 12, :column 6, :end-line 12, :end-column 14}}, assetpath {:protocol-inline nil, :meta {:file "/Users/simon/Dropbox (Personal)/workspace/rthree/src/cljs/rthree/views.cljs", :line 14, :column 7, :end-line 14, :end-column 16, :arglists (quote ([filename]))}, :name rthree.views/assetpath, :variadic false, :file "src/cljs/rthree/views.cljs", :end-column 16, :method-params ([filename]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([filename]))}, cupcake {:protocol-inline nil, :meta {:file "/Users/simon/Dropbox (Personal)/workspace/rthree/src/cljs/rthree/views.cljs", :line 16, :column 7, :end-line 16, :end-column 14, :arglists (quote ([]))}, :name rthree.views/cupcake, :variadic false, :file "src/cljs/rthree/views.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, attach-camera-control-script {:protocol-inline nil, :meta {:file "/Users/simon/Dropbox (Personal)/workspace/rthree/src/cljs/rthree/views.cljs", :line 36, :column 7, :end-line 36, :end-column 35, :arglists (quote ([node params cb])), :doc "Attach a camera control script. js/THREE.OrbitControls leaves\n  event-listeners all over the place unfortunately."}, :name rthree.views/attach-camera-control-script, :variadic false, :file "src/cljs/rthree/views.cljs", :end-column 35, :method-params ([node params cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 3, :fn-var true, :arglists (quote ([node params cb])), :doc "Attach a camera control script. js/THREE.OrbitControls leaves\n  event-listeners all over the place unfortunately."}, example-scene {:protocol-inline nil, :meta {:file "/Users/simon/Dropbox (Personal)/workspace/rthree/src/cljs/rthree/views.cljs", :line 56, :column 7, :end-line 56, :end-column 20, :arglists (quote ([camera-props rotation]))}, :name rthree.views/example-scene, :variadic false, :file "src/cljs/rthree/views.cljs", :end-column 20, :method-params ([camera-props rotation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([camera-props rotation]))}, main-panel {:protocol-inline nil, :meta {:file "/Users/simon/Dropbox (Personal)/workspace/rthree/src/cljs/rthree/views.cljs", :line 74, :column 7, :end-line 74, :end-column 17, :arglists (quote ([]))}, :name rthree.views/main-panel, :variadic false, :file "src/cljs/rthree/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:min :aspect :rotation :value :component-did-mount :width :type :geometry :fov :div :rotation-speed :quaternion :reagent-render :max :camera-update :material :camera :position :near :input :far :on-change :step :p :camera-props :height}, :order [:quaternion :position :geometry :material :fov :aspect :near :far :component-did-mount :reagent-render :camera-update :width :height :camera :rotation :camera-props :rotation-speed :div :input :type :min :max :step :value :on-change :p]}, :doc nil}